#!/bin/bash
set -eou pipefail
CURRENT_DIR="$(pwd)"
SCRIPTNAME="${0##*/}"
DATETIME=$(date -Iseconds)

function error() {
	echo -n "$SCRIPTNAME: ERROR occured in line $1: "
	shift
	echo "$@"
}
if ((EUID != 0)); then
	error $LINENO "You need to be running as root."
	exit 253
fi

# Check that what we need is installed
REQUIRED_TOOLS="curl unzip zipinfo pishrink.sh gzip pigz xz lsb_release uname lspci free"
for command in $REQUIRED_TOOLS; do
	if ! command -v "$command" >/dev/null 2>&1; then
		error $LINENO "$command is not installed."
		exit 4
	fi
done

echo "Checking Image"
IMG="${1:-$(./fetch-raspios_lite_armhf_latest | tail -n 1)}"
BASE="${IMG%%.img}"
echo "Using $IMG"

RESULTS="${SCRIPTNAME%.*}-${DATETIME//:/-}-$BASE-results.md"
echo "Logging to $RESULTS"

# shellcheck disable=SC2012
beforesize="$(ls -l "$IMG" | cut -d ' ' -f 5)"
TIMEFORMAT="- time measured:	real %3lR	user %3lU	sys %3lS	CPU %P%%"

# Full shrinkage process
function measure() {
	CMD="pishrink.sh -d$1 $2.img $2-$1-$3.img"
	echo "
#### $CMD
"
	{ time $CMD >/dev/null; } 2>&1 | grep -v 'resize2fs'

	output="$(grep 'Shrunk' pishrink.log)"
	echo "- $output"
	mv pishrink.log "$2-$1-$3.log"

	archive="${output##*Shrunk }"
	archive="${archive%% from*}"
	# shellcheck disable=SC2012
	aftersize="$(ls -l "$archive" | cut -d ' ' -f 5)"
	echo "- Compression ratio: $(printf %.2f%% "$((10 ** 3 * 100 * aftersize / beforesize))e-3")"
}

# main program
{
	echo "# test results

- Started: $DATETIME
- Version: $(pishrink.sh | head -n 1)

## sysinfo

- Distribution: $(lsb_release -ds)
- Kernel: $(uname -srm)
- Version: $(uname -v)
- Machine:$(lspci -s 00:00.0 | head -n1 | cut -d ':' -f 3)
- Memory:
$(LANGUAGE='en_EN' free -hw)

## $SCRIPTNAME

### executions"

	# compressors gzip, pigz, xz
	for run in $(eval echo {z,Z}{,a}); do
		measure "$run" "$BASE" flag
	done

	# compression level options added with
	# https://github.com/Drewsif/PiShrink/pull/154
	if grep -qE '(acC.*e.*zZ)' "$(command -v pishrink.sh)"; then
		for run in $(eval echo {z,Z,Ze}{,a}{c,C}); do
			measure "$run" "$BASE" pr154
		done
	fi

	# override implicit options
	export PISHRINK_GZIP='-v1'
	export PISHRINK_XZ='-fv0T0'
	for run in 'z' 'Z'; do
		measure "$run" "$BASE" env
	done

	echo "

### archives by size:

\`\`\`bash
$(ls -hlS "$BASE"-*.img.*)
\`\`\`
"
} &> >(tee -a "${CURRENT_DIR}/$RESULTS")

echo "Removing artifacts"
. clean-artifacts
